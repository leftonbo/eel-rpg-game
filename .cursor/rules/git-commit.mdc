---
description: Rules for git commit
alwaysApply: false
---
# Git Commit Rules

このファイルはgitコミットに関するルールを定義します。

## git コミット方針

Claude Codeは以下の方針に従ってgitコミットを行うこと

- Claude Code の編集であることが分かるように、コミット文の最後に `Co-Authored-By: Claude <noreply@anthropic.com>` を追記すること
- 指示された作業1単位が終わるごとにコミットする
- .gitignore に含まれるファイルはコミットしない
- コミットメッセージは日本語で記述すること
- コミットメッセージの先頭に [gitmoji](https://gitmoji.dev/ja/) を使用すること

## 頻繁に使用する gitmoji

- 🎉 新規プロジェクト立ち上げ
- ✨ 新機能追加
- 🐛 バグ修正
- 🩹 小さな修正
- 💡 ソースコード内コメント更新
- 📝 ドキュメント更新
- ♻️ リファクタリング
- 🎨 コードスタイルの改善
- 🚨 コンパイラ/lintの警告を修正
- ⚰️ 古いコードの削除
- 🚑️ 重大な不具合のホットフィックス
- ⚡️ パフォーマンス改善
- 💥 大幅な仕様変更など破壊的な変更を含む更新
- 🚀 デプロイ関連
- 🔧 ゲームパラメータなどの設定変更
- 🗃️ 内部データベース更新
- 💄 UI/UXなどの見た目改善
- 💫 アニメーションの追加・更新
- ✏️ タイポの修正
- 🚧 作業中コミット
- 🤡 モックの追加
- 💩 改善が必要な悪いコードのコミット
- 🗑️ 要改善・期限切れのコードのDeprecatedマーク
- 🥚 隠し要素・イースターエッグの追加・更新
- 🚚 ファイル・フォルダ整理
- 🔥 不要ファイルの削除
- 🍱 画像や音声などリソース周りの変更
- 🔨 開発支援ツール・スクリプトの追加・更新
- 🌐 翻訳・多言語化に関する更新
- 🙈 .gitignore の追加・更新
- ➕ 依存ファイルの追加
- ➖ 依存ファイルの削除
- ⬆️ 依存ファイルのアップデート
- ⬇️ 依存ファイルのダウングレード

## ブランチ作成時の命名規則

- `feature/` + 機能名
- `bugfix/` + バグ内容
- `refactor/` + リファクタリング内容
- `docs/` + ドキュメント更新内容

## PR 作成時の注意点

- PRタイトルと内容は日本語で記述すること
- テンプレートは [.github/PULL_REQUEST_TEMPLATE.md](.github/PULL_REQUEST_TEMPLATE.md) を使用
